-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | XPath-generating embedded domain specific language.
@package HaXPath
@version 0.1.1.1

module HaXPath

-- | The XPath <tt>and</tt> operator.
(&&.) :: Expression Bool -> Expression Bool -> Expression Bool
infixr 3 &&.

-- | The XPath abbreviated <tt>/</tt> operator.
(/.) :: IsPath p => p -> Node -> p
infixl 2 /.

-- | The XPath <tt>//</tt> operator.
(//.) :: IsPath p => p -> Node -> p
infixl 2 //.

-- | The XPath <tt>!=</tt> operator.
(/=.) :: Eq a => Expression a -> Expression a -> Expression Bool
infix 4 /=.

-- | The XPath <tt>&lt;</tt> operator.
(<.) :: Ord a => Expression a -> Expression a -> Expression Bool
infix 4 <.

-- | The XPath <tt>&lt;=</tt> operator.
(<=.) :: Ord a => Expression a -> Expression a -> Expression Bool
infix 4 <=.

-- | The XPath <tt>=</tt> operator.
(=.) :: Eq a => Expression a -> Expression a -> Expression Bool
infix 4 =.

-- | The XPath <tt>&gt;</tt> operator.
(>.) :: Ord a => Expression a -> Expression a -> Expression Bool
infix 4 >.

-- | The XPath <tt>&gt;=</tt> operator.
(>=.) :: Ord a => Expression a -> Expression a -> Expression Bool
infix 4 >=.

-- | The XPath <tt>or</tt> operator.
(||.) :: Expression Bool -> Expression Bool -> Expression Bool
infixr 2 ||.

-- | The XPath <tt>ancestor::</tt> axis.
ancestor :: Node -> RelativePath

-- | Access the value of a node's attribute in text form (equivalent to
--   XPath's <tt>@</tt>).
at :: Text -> Expression Text

-- | XPath boolean data type.
data Bool

-- | The XPath <tt>child::</tt> axis.
child :: Node -> RelativePath

-- | The XPath <tt>contains()</tt> function.
contains :: Expression Text -> Expression Text -> Expression Bool

-- | The XPath <tt>count()</tt> function.
count :: IsPath p => p -> Expression Number

-- | The XPath <tt>descendant::</tt> axis.
descendant :: Node -> RelativePath

-- | The XPath <tt>descendant-or-self::</tt> axis.
descendantOrSelf :: Node -> RelativePath

-- | The opposite of <a>contains</a>.
doesNotContain :: Expression Text -> Expression Text -> Expression Bool

-- | The XPath <tt>//</tt> operator.
doubleSlash :: Node -> Path

-- | Type class of XPath types that can be compared for equality.
class Eq t

-- | Opaque representation of an XPath expression.
data Expression t
class Filterable t

-- | Filter a set of nodes by the given predicate.
(#) :: Filterable t => t -> Expression Bool -> t
infixl 3 #

-- | The XPath <tt>following::</tt> axis.
following :: Node -> RelativePath

-- | The XPath <tt>following-sibling::</tt> axis.
followingSibling :: Node -> RelativePath

-- | Fix a relative path to begin from the document root (i.e. create an
--   absolute path).
fromRoot :: RelativePath -> Path

-- | Type class for allowing XPath-like operations. Do not create instances
--   of this class.
class IsPath t

-- | The XPath (non-abbreviated) <tt>/</tt> operator.
(./.) :: IsPath t => t -> RelativePath -> t

-- | Convert to a Path.
toPath :: IsPath t => t -> Path
infixl 2 ./.
class Lit h x | h -> x

-- | Create an XPath literal value from a Haskell value.
lit :: Lit h x => h -> Expression x

-- | Create a node with the given name.
namedNode :: Text -> Node

-- | The XPath <tt>node()</tt> function.
node :: Node

-- | Opaque representation of an XPath node.
data Node

-- | XPath type representing an unordered set of nodes.
data NodeSet

-- | The XPath <tt>not(.)</tt> function.
not :: Expression Bool -> Expression Bool

-- | XPath numeric data type.
data Number

-- | Type class of XPath types that can be ordered.
class Eq t => Ord t

-- | The XPath <tt>parent::</tt> axis.
parent :: Node -> RelativePath

-- | The type of XPaths.
type Path = Expression NodeSet

-- | The XPath <tt>position()</tt> function.
position :: Expression Number

-- | A relative XPath, i.e. an XPath that is relative to the current node.
data RelativePath

-- | Display an XPath expression. This is useful to sending the XPath
--   expression to a separate XPath evaluator e.g. a web browser.
show :: IsPath p => p -> Text

-- | The XPath <tt>text()</tt> function.
text :: Expression Text

-- | XPath textual (string) data type.
data Text
instance HaXPath.Filterable HaXPath.Node
instance HaXPath.Filterable HaXPath.RelativePath
instance HaXPath.Filterable HaXPath.Path
instance HaXPath.IsPath HaXPath.RelativePath
instance HaXPath.IsPath HaXPath.Path
instance HaXPath.Lit GHC.Types.Bool HaXPath.Bool
instance HaXPath.Lit GHC.Integer.Type.Integer HaXPath.Number
instance HaXPath.Lit Data.Text.Internal.Text HaXPath.Text
instance Data.String.IsString (HaXPath.Expression HaXPath.Text)
instance GHC.Num.Num (HaXPath.Expression HaXPath.Number)
instance HaXPath.Ord HaXPath.Text
instance HaXPath.Ord HaXPath.Number
instance HaXPath.Ord HaXPath.Bool
instance HaXPath.Eq HaXPath.Text
instance HaXPath.Eq HaXPath.Number
instance HaXPath.Eq HaXPath.Bool

module HaXPath.Operators

-- | Filter a set of nodes by the given predicate.
(#) :: Filterable t => t -> Expression Bool -> t
infixl 3 #

-- | The XPath <tt>and</tt> operator.
(&&.) :: Expression Bool -> Expression Bool -> Expression Bool
infixr 3 &&.

-- | The XPath (non-abbreviated) <tt>/</tt> operator.
(./.) :: IsPath t => t -> RelativePath -> t
infixl 2 ./.

-- | The XPath abbreviated <tt>/</tt> operator.
(/.) :: IsPath p => p -> Node -> p
infixl 2 /.

-- | The XPath <tt>//</tt> operator.
(//.) :: IsPath p => p -> Node -> p
infixl 2 //.

-- | The XPath <tt>!=</tt> operator.
(/=.) :: Eq a => Expression a -> Expression a -> Expression Bool
infix 4 /=.

-- | The XPath <tt>&lt;</tt> operator.
(<.) :: Ord a => Expression a -> Expression a -> Expression Bool
infix 4 <.

-- | The XPath <tt>&lt;=</tt> operator.
(<=.) :: Ord a => Expression a -> Expression a -> Expression Bool
infix 4 <=.

-- | The XPath <tt>=</tt> operator.
(=.) :: Eq a => Expression a -> Expression a -> Expression Bool
infix 4 =.

-- | The XPath <tt>&gt;</tt> operator.
(>.) :: Ord a => Expression a -> Expression a -> Expression Bool
infix 4 >.

-- | The XPath <tt>&gt;=</tt> operator.
(>=.) :: Ord a => Expression a -> Expression a -> Expression Bool
infix 4 >=.

-- | The XPath <tt>or</tt> operator.
(||.) :: Expression Bool -> Expression Bool -> Expression Bool
infixr 2 ||.

module HaXPath.Schematic

-- | The XPath <tt>and</tt> operator.
(&&.) :: Union a b c => Expression Bool a -> Expression Bool b -> Expression Bool c
infixr 3 &&.

-- | The XPath <tt>*</tt> operator.
(*.) :: Union a b c => Expression Number a -> Expression Number b -> Expression Number c
infixl 6 *.

-- | The XPath <tt>+</tt> operator.
(+.) :: Union a b c => Expression Number a -> Expression Number b -> Expression Number c
infixl 6 +.

-- | The XPath <tt>-</tt> operator.
(-.) :: Union a b c => Expression Number a -> Expression Number b -> Expression Number c
infixl 6 -.

-- | The XPath (non-abbreviated) <tt>/</tt> operator.
(./.) :: IsPath p u => p s m -> RelativePath s n -> p s n
infixl 2 ./.

-- | The XPath abbreviated <tt>/</tt> operator.
(/.) :: IsPath p u => p s m -> MultiNode s n -> p s n
infixl 2 /.

-- | The XPath <tt>//</tt> operator.
(//.) :: IsPath p u => p s m -> MultiNode s n -> p s n
infixl 2 //.

-- | The XPath <tt>!=</tt> operator.
(/=.) :: (Eq x, Union a b c) => Expression x a -> Expression x b -> Expression Bool c
infix 4 /=.

-- | The XPath <tt>&lt;</tt> operator.
(<.) :: (Ord x, Union a b c) => Expression x a -> Expression x b -> Expression Bool c
infix 4 <.

-- | The XPath <tt>&lt;=</tt> operator.
(<=.) :: (Ord x, Union a b c) => Expression x a -> Expression x b -> Expression Bool c
infix 4 <=.

-- | The XPath <tt>=</tt> operator.
(=.) :: (Eq x, Union a b c) => Expression x a -> Expression x b -> Expression Bool c
infix 4 =.

-- | The XPath <tt>&gt;</tt> operator.
(>.) :: (Ord x, Union a b c) => Expression x a -> Expression x b -> Expression Bool c
infix 4 >.

-- | The XPath <tt>&gt;=</tt> operator.
(>=.) :: (Ord x, Union a b c) => Expression x a -> Expression x b -> Expression Bool c
infix 4 >=.

-- | The XPath <tt>or</tt> operator.
(||.) :: Union a b c => Expression Bool a -> Expression Bool b -> Expression Bool c
infixr 2 ||.

-- | Schematic XPath equivalent of <a>abs</a>
abs :: Expression Number a -> Expression Number a

-- | The XPath <tt>ancestor::</tt> axis.
ancestor :: MultiNode s n -> RelativePath s n

-- | Access the value of a node's attribute in text form (equivalent to
--   XPath's <tt>@</tt>). It is recommend to call this function once only
--   for each attribute in your schema. The resulting value can be re-used.
at :: Text -> Attribute a

-- | The type of an attribute.
type Attribute a = Expression Text '[a]

-- | The type of simple boolean expressions.
type Bool = Expression Bool '[]

-- | The XPath <tt>child::</tt> axis.
child :: MultiNode s n -> RelativePath s n

-- | The XPath <tt>contains()</tt> function.
contains :: Union a b c => Expression Text a -> Expression Text b -> Expression Bool c

-- | The XPath <tt>count()</tt> function.
count :: IsPath p u => p s n -> Number

-- | The XPath <tt>descendant::</tt> axis.
descendant :: MultiNode s n -> RelativePath s n

-- | The XPath <tt>descendant-or-self::</tt> axis.
descendantOrSelf :: MultiNode s n -> RelativePath s n

-- | The opposite of <a>contains</a>.
doesNotContain :: Union a b c => Expression Text a -> Expression Text b -> Expression Bool c

-- | The XPath <tt>//</tt> operator.
doubleSlash :: MultiNode s n -> Path s n

-- | An XPath expression returning a value of type <tt>x</tt>, involving
--   zero or more attributes <tt>a</tt>.
data Expression (x :: *) (a :: [*])
class Filterable (t :: * -> [*] -> *)

-- | Filter a set of nodes by the given predicate.
(#) :: (Filterable t, NodesAttributes n a) => t s n -> Expression Bool a -> t s n
infixl 3 #

-- | The XPath <tt>following::</tt> axis.
following :: MultiNode s n -> RelativePath s n

-- | The XPath <tt>following-sibling::</tt> axis.
followingSibling :: MultiNode s n -> RelativePath s n

-- | Schematic XPath equivalent of <a>fromInteger</a>
fromInteger :: Integer -> Number

-- | Fix a relative path to begin from the document root (i.e. create an
--   absolute path).
fromRoot :: RelativePath s n -> Path s n

-- | Type class for allowing XPath-like operations. Do not create instances
--   of this class.
class IsPath u => IsPath (t :: * -> [*] -> *) (u :: *) | t -> u

-- | Convert a schematic XPath to its non-schematic equivalent.
toNonSchematicPath :: IsPath t u => t s n -> u

-- | Unsafely (without type checking) convert a non-schematic XPath to its
--   schematic equivalent.
unsafeFromNonSchematicPath :: IsPath t u => u -> t s n

-- | Create a literal XPath value.
lit :: Lit h x => h -> Expression x '[]

-- | The type of an XPath expression for returning nodes of a variety of
--   types.
data MultiNode (s :: *) (n :: [*])

-- | Create a node with the given name.
namedNode :: Text -> Node s n

-- | Schematic XPath equivalent of <a>negate</a>
negate :: Expression Number a -> Expression Number a

-- | Type of a single XPath node.
type Node (s :: *) (n :: *) = MultiNode s '[n]

-- | The XPath <tt>node()</tt> function.
node :: SchemaNodes s n => MultiNode s n

-- | Witnesses that a node of type <tt>n</tt> may have an attribute of type
--   <tt>a</tt>.
class NodeAttribute n a

-- | Witnesses that a node of type <tt>n</tt> may have zero or more of a
--   set of attributes <tt>a</tt>.
class NodeAttributes (n :: *) (a :: [*])

-- | Witnesses that a set of nodes <tt>n</tt> may have zero or more of a
--   set of attributes <tt>a</tt>.
class NodesAttributes (n :: [*]) (a :: [*])

-- | The XPath <tt>not()</tt> function.
not :: Expression Bool a -> Expression Bool a

-- | The type of simple numeric expressions.
type Number = Expression Number '[]

-- | The XPath <tt>parent::</tt> axis.
parent :: MultiNode s n -> RelativePath s n

-- | The type of XPaths for a schema <tt>s</tt> returning a set of nodes
--   which may be any of the type-list <tt>n</tt>.
data Path (s :: *) (n :: [*])

-- | The XPath <tt>position()</tt> function.
position :: Number

-- | A relative XPath for a schema <tt>s</tt> returning a set of nodes
--   which may be any of the type-list <tt>n</tt>.
data RelativePath (s :: *) (n :: [*])

-- | A given schema <tt>s</tt> may be comprised of a universe of nodes
--   <tt>n</tt>.
class SchemaNodes (s :: *) (n :: [*]) | s -> n

-- | Display an XPath expression. This is useful for sending the XPath
--   expression to a separate XPath evaluator e.g. a web browser.
show :: IsPath p u => p s n -> Text

-- | Schematic XPath equivalent of <a>signum</a>
signum :: Expression Number a -> Expression Number a

-- | The XPath <tt>text()</tt> function.
text :: Text

-- | The type of simple text expressions.
type Text = Expression Text '[]

-- | The union of two sets of types.
class Union (l :: [*]) (m :: [*]) (lm :: [*]) | l m -> lm
instance HaXPath.Schematic.Filterable HaXPath.Schematic.MultiNode
instance HaXPath.Schematic.Filterable HaXPath.Schematic.RelativePath
instance HaXPath.Schematic.Filterable HaXPath.Schematic.Path
instance (HaXPath.Schematic.NodeAttributes n a, HaXPath.Schematic.NodesAttributes n' a) => HaXPath.Schematic.NodesAttributes (n : n') a
instance HaXPath.Schematic.NodesAttributes '[] a
instance (HaXPath.Schematic.NodeAttribute n h, HaXPath.Schematic.NodeAttributes n t) => HaXPath.Schematic.NodeAttributes n (h : t)
instance HaXPath.Schematic.NodeAttributes n '[]
instance HaXPath.Schematic.IsPath HaXPath.Schematic.RelativePath HaXPath.RelativePath
instance HaXPath.Schematic.IsPath HaXPath.Schematic.Path HaXPath.Path
instance Data.String.IsString HaXPath.Schematic.Text
instance GHC.Num.Num HaXPath.Schematic.Number
instance HaXPath.Schematic.Union '[] m m
instance HaXPath.Schematic.Union l' m lm => HaXPath.Schematic.Union (l : l') m (l : lm)

module HaXPath.Schematic.HTML

-- | The type of HTML documents.
data HTML

-- | The type of a HTML XPath expression for returning nodes of a variety
--   of types.
type MultiNode = MultiNode HTML

-- | Type of a single HTML XPath node.
type Node n = Node HTML n

-- | The type of HTML XPaths.
type Path = Path HTML

-- | The type of relative HTML XPaths.
type RelativePath = RelativePath HTML

-- | Type of the HTML <tt>@class</tt> attribute.
data Classname

-- | <tt>@class</tt>.
classname :: Attribute Classname

-- | Type of the HTML <tt>@data-*</tt> attribute.
data Pagedata

-- | Access the <tt>@data-<a>custom</a></tt> attribute.
pagedata :: Text -> Attribute Pagedata

-- | Type of the HTML <tt>@id</tt> attribute.
data Colspan

-- | <tt>@colspan</tt>.
colspan :: Attribute Colspan

-- | Type of the HTML <tt>@id</tt> attribute.
data Id

-- | <tt>@id</tt>.
id :: Attribute Id

-- | Type of the HTML <tt>@href</tt> attribute.
data Href

-- | <tt>@href</tt>.
href :: Attribute Href

-- | Type of the HTML <tt>@onclick</tt> attribute.
data Onclick

-- | <tt>@onclick</tt>.
onclick :: Attribute Onclick

-- | Type of the HTML <tt>@style</tt> attribute.
data Style

-- | <tt>@style</tt>.
style :: Attribute Style

-- | Type of the HTML <tt>@title</tt> attribute.
data Title

-- | <tt>@title</tt>.
title :: Attribute Title

-- | Type of the HTML <tt>&lt;a&gt;</tt> node.
data A

-- | Select an <tt>&lt;a&gt;</tt>.
a :: Node A

-- | Type of the HTML <tt>&lt;body&gt;</tt> node.
data Body

-- | Select a <tt>&lt;body&gt;</tt>.
body :: Node Body

-- | Type of the HTML <tt>&lt;div&gt;</tt> node.
data Div

-- | Select a <tt>&lt;div&gt;</tt>.
div :: Node Div

-- | Type of the HTML <tt>&lt;h1&gt;</tt> node.
data H1

-- | Select a <tt>&lt;h1&gt;</tt>.
h1 :: Node H1

-- | Type of the HTML <tt>&lt;h2&gt;</tt> node.
data H2

-- | Select a <tt>&lt;h2&gt;</tt>.
h2 :: Node H2

-- | Type of the HTML <tt>&lt;h3&gt;</tt> node.
data H3

-- | Select a <tt>&lt;h3&gt;</tt>.
h3 :: Node H3

-- | Type of the HTML <tt>&lt;input&gt;</tt> node.
data Input

-- | Select an <tt>&lt;input&gt;</tt>.
input :: Node Input

-- | Type of the HTML <tt>&lt;option&gt;</tt> node.
data Option

-- | Select an <tt>&lt;option&gt;</tt>.
option :: Node Option

-- | Type of the HTML <tt>&lt;select&gt;</tt> node.
data Select

-- | Select a <tt>&lt;select&gt;</tt>.
select :: Node Select

-- | Type of the HTML <tt>&lt;span&gt;</tt> node.
data Span

-- | Select a @&lt;span&gt;.
span :: Node Span

-- | Type of the HTML <tt>&lt;strong&gt;</tt> node.
data Strong

-- | Select a @&lt;strong&gt;.
strong :: Node Strong

-- | Type of the HTML <tt>&lt;sup&gt;</tt> node.
data Sup

-- | Select a @&lt;sup&gt;.
sup :: Node Sup

-- | Type of the HTML <tt>&lt;table&gt;</tt> node.
data Table

-- | Select a @&lt;table&gt;.
table :: Node Table

-- | Type of the HTML <tt>&lt;tbody&gt;</tt> node.
data Tbody

-- | Select a <tt>&lt;tbody&gt;</tt>.
tbody :: Node Tbody

-- | Type of the HTML <tt>&lt;td&gt;</tt> node.
data Td

-- | Select a <tt>&lt;td&gt;</tt>.
td :: Node Td

-- | Type of the HTML <tt>&lt;tr&gt;</tt> node.
data Tr

-- | Select a <tt>&lt;tr&gt;</tt>.
tr :: Node Tr
instance HaXPath.Schematic.SchemaNodes HaXPath.Schematic.HTML.HTML '[HaXPath.Schematic.HTML.A, HaXPath.Schematic.HTML.Body, HaXPath.Schematic.HTML.Div, HaXPath.Schematic.HTML.H1, HaXPath.Schematic.HTML.H2, HaXPath.Schematic.HTML.H3, HaXPath.Schematic.HTML.Input, HaXPath.Schematic.HTML.Option, HaXPath.Schematic.HTML.Select, HaXPath.Schematic.HTML.Span, HaXPath.Schematic.HTML.Strong, HaXPath.Schematic.HTML.Sup, HaXPath.Schematic.HTML.Table, HaXPath.Schematic.HTML.Tbody, HaXPath.Schematic.HTML.Td, HaXPath.Schematic.HTML.Tr]
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Tr HaXPath.Schematic.HTML.Classname
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Tr HaXPath.Schematic.HTML.Id
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Tr HaXPath.Schematic.HTML.Onclick
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Tr HaXPath.Schematic.HTML.Pagedata
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Tr HaXPath.Schematic.HTML.Style
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Tr HaXPath.Schematic.HTML.Title
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Td HaXPath.Schematic.HTML.Colspan
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Td HaXPath.Schematic.HTML.Classname
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Td HaXPath.Schematic.HTML.Id
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Td HaXPath.Schematic.HTML.Onclick
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Td HaXPath.Schematic.HTML.Pagedata
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Td HaXPath.Schematic.HTML.Style
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Td HaXPath.Schematic.HTML.Title
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Tbody HaXPath.Schematic.HTML.Classname
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Tbody HaXPath.Schematic.HTML.Id
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Tbody HaXPath.Schematic.HTML.Onclick
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Tbody HaXPath.Schematic.HTML.Pagedata
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Tbody HaXPath.Schematic.HTML.Style
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Tbody HaXPath.Schematic.HTML.Title
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Table HaXPath.Schematic.HTML.Classname
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Table HaXPath.Schematic.HTML.Id
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Table HaXPath.Schematic.HTML.Onclick
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Table HaXPath.Schematic.HTML.Pagedata
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Table HaXPath.Schematic.HTML.Style
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Table HaXPath.Schematic.HTML.Title
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Sup HaXPath.Schematic.HTML.Classname
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Sup HaXPath.Schematic.HTML.Id
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Sup HaXPath.Schematic.HTML.Onclick
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Sup HaXPath.Schematic.HTML.Pagedata
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Sup HaXPath.Schematic.HTML.Style
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Sup HaXPath.Schematic.HTML.Title
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Strong HaXPath.Schematic.HTML.Classname
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Strong HaXPath.Schematic.HTML.Id
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Strong HaXPath.Schematic.HTML.Onclick
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Strong HaXPath.Schematic.HTML.Pagedata
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Strong HaXPath.Schematic.HTML.Style
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Strong HaXPath.Schematic.HTML.Title
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Span HaXPath.Schematic.HTML.Classname
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Span HaXPath.Schematic.HTML.Id
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Span HaXPath.Schematic.HTML.Onclick
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Span HaXPath.Schematic.HTML.Pagedata
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Span HaXPath.Schematic.HTML.Style
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Span HaXPath.Schematic.HTML.Title
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Select HaXPath.Schematic.HTML.Classname
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Select HaXPath.Schematic.HTML.Id
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Select HaXPath.Schematic.HTML.Onclick
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Select HaXPath.Schematic.HTML.Pagedata
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Select HaXPath.Schematic.HTML.Style
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Select HaXPath.Schematic.HTML.Title
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Option HaXPath.Schematic.HTML.Classname
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Option HaXPath.Schematic.HTML.Id
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Option HaXPath.Schematic.HTML.Onclick
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Option HaXPath.Schematic.HTML.Pagedata
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Option HaXPath.Schematic.HTML.Style
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Option HaXPath.Schematic.HTML.Title
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Input HaXPath.Schematic.HTML.Classname
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Input HaXPath.Schematic.HTML.Id
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Input HaXPath.Schematic.HTML.Onclick
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Input HaXPath.Schematic.HTML.Pagedata
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Input HaXPath.Schematic.HTML.Style
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Input HaXPath.Schematic.HTML.Title
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.H3 HaXPath.Schematic.HTML.Classname
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.H3 HaXPath.Schematic.HTML.Pagedata
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.H3 HaXPath.Schematic.HTML.Id
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.H3 HaXPath.Schematic.HTML.Onclick
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.H3 HaXPath.Schematic.HTML.Style
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.H3 HaXPath.Schematic.HTML.Title
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.H2 HaXPath.Schematic.HTML.Classname
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.H2 HaXPath.Schematic.HTML.Id
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.H2 HaXPath.Schematic.HTML.Onclick
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.H2 HaXPath.Schematic.HTML.Pagedata
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.H2 HaXPath.Schematic.HTML.Style
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.H2 HaXPath.Schematic.HTML.Title
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.H1 HaXPath.Schematic.HTML.Classname
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.H1 HaXPath.Schematic.HTML.Pagedata
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.H1 HaXPath.Schematic.HTML.Id
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.H1 HaXPath.Schematic.HTML.Onclick
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.H1 HaXPath.Schematic.HTML.Style
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.H1 HaXPath.Schematic.HTML.Title
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Div HaXPath.Schematic.HTML.Classname
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Div HaXPath.Schematic.HTML.Id
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Div HaXPath.Schematic.HTML.Onclick
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Div HaXPath.Schematic.HTML.Pagedata
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Div HaXPath.Schematic.HTML.Style
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Div HaXPath.Schematic.HTML.Title
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Body HaXPath.Schematic.HTML.Classname
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Body HaXPath.Schematic.HTML.Id
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Body HaXPath.Schematic.HTML.Onclick
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Body HaXPath.Schematic.HTML.Pagedata
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Body HaXPath.Schematic.HTML.Style
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.Body HaXPath.Schematic.HTML.Title
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.A HaXPath.Schematic.HTML.Href
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.A HaXPath.Schematic.HTML.Classname
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.A HaXPath.Schematic.HTML.Id
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.A HaXPath.Schematic.HTML.Onclick
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.A HaXPath.Schematic.HTML.Pagedata
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.A HaXPath.Schematic.HTML.Style
instance HaXPath.Schematic.NodeAttribute HaXPath.Schematic.HTML.A HaXPath.Schematic.HTML.Title

module HaXPath.Schematic.Operators

-- | Filter a set of nodes by the given predicate.
(#) :: (Filterable t, NodesAttributes n a) => t s n -> Expression Bool a -> t s n
infixl 3 #

-- | The XPath <tt>and</tt> operator.
(&&.) :: Union a b c => Expression Bool a -> Expression Bool b -> Expression Bool c
infixr 3 &&.

-- | The XPath <tt>*</tt> operator.
(*.) :: Union a b c => Expression Number a -> Expression Number b -> Expression Number c
infixl 6 *.

-- | The XPath <tt>+</tt> operator.
(+.) :: Union a b c => Expression Number a -> Expression Number b -> Expression Number c
infixl 6 +.

-- | The XPath <tt>-</tt> operator.
(-.) :: Union a b c => Expression Number a -> Expression Number b -> Expression Number c
infixl 6 -.

-- | The XPath (non-abbreviated) <tt>/</tt> operator.
(./.) :: IsPath p u => p s m -> RelativePath s n -> p s n
infixl 2 ./.

-- | The XPath abbreviated <tt>/</tt> operator.
(/.) :: IsPath p u => p s m -> MultiNode s n -> p s n
infixl 2 /.

-- | The XPath <tt>//</tt> operator.
(//.) :: IsPath p u => p s m -> MultiNode s n -> p s n
infixl 2 //.

-- | The XPath <tt>!=</tt> operator.
(/=.) :: (Eq x, Union a b c) => Expression x a -> Expression x b -> Expression Bool c
infix 4 /=.

-- | The XPath <tt>&lt;</tt> operator.
(<.) :: (Ord x, Union a b c) => Expression x a -> Expression x b -> Expression Bool c
infix 4 <.

-- | The XPath <tt>&lt;=</tt> operator.
(<=.) :: (Ord x, Union a b c) => Expression x a -> Expression x b -> Expression Bool c
infix 4 <=.

-- | The XPath <tt>=</tt> operator.
(=.) :: (Eq x, Union a b c) => Expression x a -> Expression x b -> Expression Bool c
infix 4 =.

-- | The XPath <tt>&gt;</tt> operator.
(>.) :: (Ord x, Union a b c) => Expression x a -> Expression x b -> Expression Bool c
infix 4 >.

-- | The XPath <tt>&gt;=</tt> operator.
(>=.) :: (Ord x, Union a b c) => Expression x a -> Expression x b -> Expression Bool c
infix 4 >=.

-- | The XPath <tt>or</tt> operator.
(||.) :: Union a b c => Expression Bool a -> Expression Bool b -> Expression Bool c
infixr 2 ||.
